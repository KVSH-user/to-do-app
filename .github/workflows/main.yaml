name: CI

on:
  push:
    branches:
      - main

env:
  REGISTRY: "docker.io"
  IMAGE_NAME: "kvshuser/todolist:v0.1"
  CONTAINER_NAME: "todolist"

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Set short SHA
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | head -c7)" >> $GITHUB_ENV

      - name: Build container image
        run: docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.SHORT_SHA }} .

      - name: Push image to DigitalOcean Container Registry
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.SHORT_SHA }}



      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.SPRINTBOX_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,,CONTAINER_NAME
          deploy:
            runs-on: ubuntu-latest
            needs: build_and_push
            steps:
              - name: Deploy to Digital Ocean droplet via SSH action
                uses: appleboy/ssh-action@v0.1.3
                with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  key: ${{ secrets.SSHKEY }}
                  script: |
                    docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} ${{ env.REGISTRY }}

                    docker stop ${{ env.CONTAINER_NAME }}

                    docker rm ${{ env.CONTAINER_NAME }}

                    export AUTH_SERVER_URL=${{ secrets.AUTH_SERVER_URL }}

                    docker run -e TOKEN -e CONSUMER_KEY -e AUTH_SERVER_URL -d \
                    --restart always \
                    --publish 8000:8000 \
                    --name ${{ env.CONTAINER_NAME }} \
                    ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.SHORT_SHA }}
